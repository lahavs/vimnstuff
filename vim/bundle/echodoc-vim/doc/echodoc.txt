*echodoc.txt*	Print documentation in echo area

Version: 1.0
Author : Shougo <Shougo.Matsu@gmail.com>
License: MIT license

CONTENTS					*echodoc-contents*

Introduction		|echodoc-introduction|
Install			|echodoc-install|
Interface		|echodoc-interface|
  Commands		  |echodoc-commands|
  Variables		  |echodoc-variables|
  Functions		  |echodoc-functions|
Examples		|echodoc-examples|
Changelog		|echodoc-changelog|

==============================================================================
INTRODUCTION					*echodoc-introduction*

*echodoc* displays information in echo area from echodoc plugin.

|echodoc| has the following properties which cannot be realized by ftplugin:
	1. outputs messages from multiple plugins,
	   (required that |cmdheight| is high enough or |noshowmode|)
	2. has a priority ranking in the search,
	3. adds/deletes a plugin at any time,
	4. highlights messages,
	5. uses context filetype when |context_filetype| is installed, and
	   https://github.com/Shougo/context_filetype.vim
	6. uses multiple filetypes.

Note: To use echodoc, you must increase 'cmdheight' value (2 or above),
	or disable showmode with 'noshowmode' so you will be able to see
	|echodoc|'s information clearly, without the "-- INSERT --" message
	overwriting it.

==============================================================================
USAGE						*echodoc-usage*

==============================================================================
INSTALL						*echodoc-install*

Note: echodoc requires |v:completed_item| feature.  It is added in Vim
7.4.774.

NeoBundle 'Shougo/echodoc', '', 'default'
call neobundle#config('echodoc', {
      \ 'lazy' : 1,
      \ 'autoload' : {
      \ 'insert' : 1,
      \ }})

==============================================================================
INTERFACE					*echodoc-interface*

------------------------------------------------------------------------------
COMMANDS 					*echodoc-commands*

:EchoDocEnable					*:EchoDocEnable*
		Enables |echodoc|.

:EchoDocDisable					*:EchoDocDisable*
		Disables |echodoc|.

------------------------------------------------------------------------------
VARIABLES 					*echodoc-variables*

g:echodoc#enable_at_startup			*g:echodoc#enable_at_startup*
		If the value of this variable is non-zero,
		|echodoc| is automatically enabled at startup.

		Default: 0

g:echodoc#enable_force_overwrite
					*g:echodoc#enable_force_overwrite*
		If the value of this variable is non-zero,
		|echodoc| overwrites current documentation in echo area.
		Note: It adds the flicker.

		Default: 0

g:echodoc#highlight_identifier
					*g:echodoc#highlight_identifier*
		The highlight of identifier.

		Default: "Identifier"

g:echodoc#highlight_arguments
						*g:echodoc#highlight_arguments*
		The highlight of current argument.

		Default: "Special"

g:echodoc#type				*g:echodoc#type*
		The documentation display type.
		"echo": It uses the command line |:echo|.
		"signature": It uses gonvim signature feature.
		https://github.com/dzhou121/gonvim

		Default: "echo"

------------------------------------------------------------------------------
FUNCTIONS 					*echodoc-functions*

echodoc#enable()				*echodoc#enable()*
		Enables |echodoc|.  This is a function version of
		|:EchoDocEnable|.

echodoc#disable()				*echodoc#disable()*
		Disables |echodoc|.  This is a function version of
		|:EchoDocDisable|.

echodoc#is_enabled()				*echodoc#is_enabled()*
		Gets weather |echodoc| plugin is enabled.  This function
		returns Number 1 if |echodoc| is enabled, zero otherwise.

echodoc#register({name}, {dict})		*echodoc#register()*
		Registers the docs {dict} of the name {name}.
		If the docs with the same name exists, it will be overwritten.
		{dict} is a |Dictionary| which contains the followings:

		"name"		String (Required)
			A name of this docs {dict}.  The user can be given
			any name.  This value and {name} must have the same
			value.

		"rank"		Number (Required)
			The priority ranking in the search.  The smaller value
			shows higher priority.

		"filetypes"	Dictionary (Required)
			This is a |Dictionary| where the key is a filetype string
			and the value is anything.
			|echodoc| uses the {dict} when the {dict} has an entry where
			the key is the |filetype| of the current buffer.  If this
			is a empty, |echodoc| always uses the {dict}.

		"search"	Function	(Required)
			Search function.  This function takes a string as its
			parameter and returns a list of dictionaries.  The
			|Dictionary| must have an entry where the key is "text"
			and the value is a String of a message.  When the
			|Dictionary| has an entry with the key "highlight",
			|echodoc| highlights the message.

echodoc#unregister({name})		*echodoc#unregister()*
		Unregisters the docs of the name {name}.

echodoc#get({name})				 *echodoc#get()*
		Get the echodoc dictionary for {name}.
		Useful for exists check.

==============================================================================
EXAMPLES					*echodoc-examples*
>
Option 1:
	" To use echodoc, you must increase 'cmdheight' value.
	set cmdheight=2
	let g:echodoc_enable_at_startup = 1

Option 2:
	" Or, you could disable showmode alltogether.
	set noshowmode
	let g:echodoc_enable_at_startup = 1
>
==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
